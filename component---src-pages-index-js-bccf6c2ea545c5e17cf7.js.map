{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/navLinks.js","webpack:///./src/components/layout.js"],"names":["Index","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","className","map","_ref","node","frontmatter","fields","slug","key","style","margin","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","date","totalCount","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","NavLinks","react_default","gatsby_browser_entry","Layout","layoutQuery","navLinks","_1624601695"],"mappings":"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","file":"component---src-pages-index-js-bccf6c2ea545c5e17cf7.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass Index extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const posts = data.allMarkdownRemark.edges\r\n    console.log(\"data\", data)\r\n\r\n    return (\r\n      <Layout location={data.location} title={siteTitle}>\r\n        <SEO\r\n          title=\"All posts\"\r\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\r\n        />\r\n        <h1 className=\"home-name\">Jenssen Lee</h1>\r\n        <p className=\"home-job-title\">Software Engineer</p>\r\n        <p>My name is Jenssen Lee or @jenlky on the internet.</p>\r\n        <p>\r\n          I'm a Software Engineer in Singapore.{\" \"}\r\n          <sup className=\"home-hire\">(Available for hire!)</sup>\r\n        </p>\r\n        <p>\r\n          This site contains my essays on technology, software development and\r\n          whatever is on my mind at the moment. The projects page holds a\r\n          portfolio of my projects.\r\n        </p>\r\n        <h3 className=\"recent-essays\">Recent Essays</h3>\r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <div className=\"essays\" key={node.fields.slug}>\r\n              <h3\r\n                style={{\r\n                  margin: 0,\r\n                }}\r\n              >\r\n                <Link className=\"essays-uri\" to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n            </div>\r\n          )\r\n        })}\r\n        <div className=\"view-archived-wrapper\">\r\n          <Link to=\"/blog\" className=\"view-archived\">\r\n            View All {data.allMarkdownRemark.totalCount} Essays\r\n          </Link>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { fields: { slug: { regex: \"/^/blog/\" } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: 5\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"Do MMMM YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst NavLinks = () => {\r\n  return (\r\n    <nav className=\"menu\">\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/blog\">Blog</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/projects\">Projects</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavLinks\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\nimport \"./global.css\"\r\nimport NavLinks from \"../components/navLinks\"\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { children } = this.props\r\n\r\n    return (\r\n      <StaticQuery\r\n        query={layoutQuery}\r\n        render={data => {\r\n          return (\r\n            <main\r\n              style={{\r\n                margin: `${rhythm(1.3)} ${rhythm(1)}`,\r\n              }}\r\n              className=\"main\"\r\n            >\r\n              <div className=\"content\">{children}</div>\r\n              <NavLinks />\r\n            </main>\r\n          )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst layoutQuery = graphql`\r\n  query layoutQuery {\r\n    site {\r\n      siteMetadata {\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}