{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/navLinks.js","webpack:///./src/components/layout.js"],"names":["Projects","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","map","_ref","node","frontmatter","fields","slug","key","style","marginTop","rhythm","marginBottom","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","NavLinks","react_default","className","gatsby_browser_entry","Layout","layoutQuery","margin","navLinks","_1624601695"],"mappings":"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","file":"component---src-pages-projects-js-aa5c4d1bac10e0b5330a.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass Projects extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const posts = data.allMarkdownRemark.edges\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO\r\n          title=\"All posts\"\r\n          keywords={[`projects`, `portfolio`, `javascript`, `react`]}\r\n        />\r\n        <h1>Projects</h1>\r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <div key={node.fields.slug}>\r\n              <h3\r\n                style={{\r\n                  marginTop: rhythm(3 / 4),\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              {/* <small>{node.frontmatter.date}</small> */}\r\n              <p\r\n                style={{ marginBottom: `21px` }}\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        })}\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { fields: { slug: { regex: \"/^/projects/\" } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM Do, YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst NavLinks = () => {\r\n  return (\r\n    <nav className=\"menu\">\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/blog\">Blog</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/projects\">Projects</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavLinks\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\nimport \"./global.css\"\r\nimport NavLinks from \"../components/navLinks\"\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { children } = this.props\r\n\r\n    return (\r\n      <StaticQuery\r\n        query={layoutQuery}\r\n        render={data => {\r\n          return (\r\n            <main\r\n              style={{\r\n                margin: `${rhythm(1.3)} ${rhythm(1)}`,\r\n              }}\r\n              className=\"main\"\r\n            >\r\n              <div className=\"content\">{children}</div>\r\n              <NavLinks />\r\n            </main>\r\n          )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst layoutQuery = graphql`\r\n  query layoutQuery {\r\n    site {\r\n      siteMetadata {\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}