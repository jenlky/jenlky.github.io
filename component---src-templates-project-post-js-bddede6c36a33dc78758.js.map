{"version":3,"sources":["webpack:///./src/templates/project-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["ProjectPostTemplate","render","data","this","props","siteTitle","site","siteMetadata","title","post","markdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","frontmatter","description","excerpt","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","Layout","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","layoutQuery","style","margin","className","_public_static_d_1624601695_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-templates-project-post-js-bddede6c36a33dc78758.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass ProjectPostTemplate extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const post = data.markdownRemark\r\n\r\n    return (\r\n      // maybe I can add images to the excerpt/summary of the project\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.description || post.excerpt}\r\n        />\r\n        <h2>{post.frontmatter.title}</h2>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query ProjectPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\nimport \"./global.css\"\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { children } = this.props\r\n\r\n    return (\r\n      <StaticQuery\r\n        query={layoutQuery}\r\n        render={data => {\r\n          return (\r\n            <main\r\n              style={{\r\n                margin: `${rhythm(1.3)} ${rhythm(1)}`,\r\n              }}\r\n              className=\"main\"\r\n            >\r\n              <div className=\"content\">{children}</div>\r\n            </main>\r\n          )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst layoutQuery = graphql`\r\n  query layoutQuery {\r\n    site {\r\n      siteMetadata {\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}